[{"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/index.js":"1","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/App.js":"2","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/Navbar.js":"3","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/Home.js":"4","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/About.js":"5","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/Contact.js":"6","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Cart.js":"7","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Register.js":"8","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Profile.js":"9","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Login.js":"10","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/CheckoutSuccess.js":"11","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/ImageUploadDemo.js":"12","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/ImageUploader.js":"13","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/SellDevice.js":"14","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/UserListings.js":"15","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/SearchResults.js":"16","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/AllUserListings.js":"17"},{"size":251,"mtime":1668400182000,"results":"18","hashOfConfig":"19"},{"size":1845,"mtime":1746971387130,"results":"20","hashOfConfig":"19"},{"size":9938,"mtime":1746985574276,"results":"21","hashOfConfig":"19"},{"size":28894,"mtime":1746985559151,"results":"22","hashOfConfig":"19"},{"size":3868,"mtime":1742728938858,"results":"23","hashOfConfig":"19"},{"size":4669,"mtime":1746419919922,"results":"24","hashOfConfig":"19"},{"size":9957,"mtime":1746985314404,"results":"25","hashOfConfig":"19"},{"size":2529,"mtime":1746985500005,"results":"26","hashOfConfig":"19"},{"size":7265,"mtime":1746985521207,"results":"27","hashOfConfig":"19"},{"size":2864,"mtime":1746985331952,"results":"28","hashOfConfig":"19"},{"size":1455,"mtime":1746424942952,"results":"29","hashOfConfig":"19"},{"size":3189,"mtime":1746424942964,"results":"30","hashOfConfig":"19"},{"size":8783,"mtime":1746986838431,"results":"31","hashOfConfig":"19"},{"size":12529,"mtime":1746989398452,"results":"32","hashOfConfig":"19"},{"size":6713,"mtime":1746985478734,"results":"33","hashOfConfig":"19"},{"size":6854,"mtime":1746985449492,"results":"34","hashOfConfig":"19"},{"size":18212,"mtime":1746985208009,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"71p9zt",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"79"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/index.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/App.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/Navbar.js",["95","96","97"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport './index.css';\r\nimport './Home.css';\r\nimport './Navbar.css';\r\nimport './amazon-theme.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n      fetchCartCount();\r\n    }\r\n\r\n    // Listen for auth state changes\r\n    const handleAuthChange = () => {\r\n      const updatedUser = localStorage.getItem('user');\r\n      if (updatedUser) {\r\n        setUser(JSON.parse(updatedUser));\r\n        fetchCartCount();\r\n      } else {\r\n        setUser(null);\r\n        setCartCount(0);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('authStateChange', handleAuthChange);\r\n    return () => window.removeEventListener('authStateChange', handleAuthChange);\r\n\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setIsDropdownOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const fetchCartCount = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n\r\n      const response = await fetch('https://localhost:8081/api/cart', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setCartCount(data.items.length);\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to fetch cart:', err);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setCartCount(0);\r\n    window.location.href = '/';\r\n  };\r\n\r\n  return(\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark sticky-top\">\r\n          <div className=\"container-fluid px-2 px-md-3\">\r\n            <div className=\"d-flex align-items-center\">\r\n              <img src=\"https://thumbs.dreamstime.com/b/vector-graphic-emblem-hexagon-initials-letter-pm-logo-design-template-vector-graphic-initials-letter-pm-logo-design-template-204622998.jpg\" height=\"40px\" className=\"me-2\" alt=\"PhoneMania Logo\"/>\r\n              <NavLink className=\"navbar-brand fw-bold text-white\" to=\"/\">PHONOMANIA</NavLink>\r\n            </div>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <form className=\"d-flex mx-auto\" style={{width: '60%'}} onSubmit={(e) => {\r\n                e.preventDefault();\r\n                const searchInput = e.target.querySelector('input[type=\"search\"]');\r\n                const categorySelect = e.target.querySelector('select');\r\n                const searchQuery = searchInput.value.trim();\r\n                const category = categorySelect.value;\r\n                \r\n                if (searchQuery) {\r\n                  window.location.href = `/search?q=${encodeURIComponent(searchQuery)}&category=${encodeURIComponent(category)}`;\r\n                }\r\n              }}>\r\n                <div className=\"input-group\">\r\n                  <select className=\"form-select\" style={{maxWidth: '120px', borderRadius: '4px 0 0 4px', backgroundColor: '#f3f3f3'}}>\r\n                    <option>All</option>\r\n                    <option>Smartphones</option>\r\n                    <option>Accessories</option>\r\n                    <option>Used</option>\r\n                  </select>\r\n                  <input className=\"form-control\" type=\"search\" placeholder=\"Search for smartphones, accessories, and more...\" aria-label=\"Search\" required />\r\n                  <button className=\"btn btn-primary\" type=\"submit\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                  </button>\r\n                </div>\r\n              </form>\r\n              <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0 text-white\">\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                    <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                      <small className=\"text-muted d-none d-lg-block\">Hello</small>\r\n                      <span>Home</span>\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/user-listings\">\r\n                    <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                      <small className=\"text-muted d-none d-lg-block\">Browse</small>\r\n                      <span>User Listings</span>\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Contact\">\r\n                    <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                      <small className=\"text-muted d-none d-lg-block\">Help</small>\r\n                      <span>Contact</span>\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/sell-device\">\r\n                    <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                      <small className=\"text-muted d-none d-lg-block\">List Your</small>\r\n                      <span><i className=\"fas fa-tag me-1\"></i>Sell</span>\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n                {user && (\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/my-listings\">\r\n                    <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                      <small className=\"text-muted d-none d-lg-block\">Your</small>\r\n                      <span><i className=\"fas fa-list me-1\"></i>My Listings</span>\r\n                    </div>\r\n                  </NavLink>\r\n                </li>\r\n                )}\r\n                {user ? (\r\n                  <>\r\n                    <li className=\"nav-item\">\r\n                      <NavLink className=\"nav-link\" to=\"/cart\">\r\n                        <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                          <small className=\"text-muted d-none d-lg-block\">Cart</small>\r\n                          <span className=\"position-relative\">\r\n                            <i className=\"fas fa-shopping-cart\"></i>\r\n                            {cartCount > 0 && (\r\n                              <span className=\"position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning text-dark\">\r\n                                {cartCount}\r\n                              </span>\r\n                            )}\r\n                          </span>\r\n                        </div>\r\n                      </NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\" ref={dropdownRef}>\r\n                      <a \r\n                        className={`nav-link dropdown-toggle ${isDropdownOpen ? 'show' : ''}`}\r\n                        href=\"#\"\r\n                        role=\"button\"\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          e.stopPropagation();\r\n                          setIsDropdownOpen(!isDropdownOpen);\r\n                        }}\r\n                        aria-expanded={isDropdownOpen}\r\n                      >\r\n                        <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                          <small className=\"text-muted d-none d-lg-block\">Hello, {user.name?.split(' ')[0]}</small>\r\n                          <span>Account <i className=\"fas fa-user\"></i></span>\r\n                        </div>\r\n                      </a>\r\n                      <ul className={`dropdown-menu dropdown-menu-end ${isDropdownOpen ? 'show' : ''}`}>\r\n                        <li><NavLink className=\"dropdown-item\" to=\"/profile\" onClick={() => setIsDropdownOpen(false)}>Profile</NavLink></li>\r\n                        <li><hr className=\"dropdown-divider\" /></li>\r\n                        <li><button className=\"dropdown-item\" onClick={() => {\r\n                          setIsDropdownOpen(false);\r\n                          handleLogout();\r\n                        }}>Logout</button></li>\r\n                      </ul>\r\n                    </li>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <li className=\"nav-item\">\r\n                      <NavLink className=\"nav-link\" to=\"/login\">\r\n                        <div className=\"d-flex flex-column align-items-center align-items-lg-start\">\r\n                          <small className=\"text-muted d-none d-lg-block\">Hello, Sign in</small>\r\n                          <span>Account & Lists</span>\r\n                        </div>\r\n                      </NavLink>\r\n                    </li>\r\n                  </>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        \r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Navbar;\r\n","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/Home.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './index.css';\r\nimport './Home.css';\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [userListings, setUserListings] = useState([]);\r\n  const [loadingListings, setLoadingListings] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    \r\n    // Fetch user listings for the featured section\r\n    fetchUserListings();\r\n  }, []);\r\n  \r\n  const fetchUserListings = async () => {\r\n    try {\r\n      setLoadingListings(true);\r\n      const response = await fetch('https://localhost:8081/api/listings/');\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch user listings');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      // Get up to 4 user listings to display\r\n      setUserListings(data.slice(0, 4));\r\n    } catch (error) {\r\n      console.error('Error fetching user listings:', error);\r\n    } finally {\r\n      setLoadingListings(false);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (productId, quantity, price = null, isUserListing = false) => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      // Show loading indicator\r\n      const productElement = document.getElementById(`add-to-cart-${productId}`);\r\n      if (productElement) {\r\n        productElement.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Adding...';\r\n        productElement.disabled = true;\r\n      }\r\n      \r\n      // If it's a user listing, use the provided price, otherwise use the hardcoded price\r\n      const productPrice = isUserListing ? price : getProductPrice(productId);\r\n      \r\n      const response = await fetch('https://localhost:8081/api/cart/add', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ productId, quantity, price: productPrice })\r\n      });\r\n      \r\n      // Helper function to get product price based on ID\r\n      function getProductPrice(id) {\r\n        const prices = {\r\n          'iphone14promax': 1099.99,\r\n          's23ultra': 1199.99,\r\n          'p30pro': 699.99,\r\n          'iphone14progold': 1099.99\r\n        };\r\n        return prices[id] || 999.99; // Default price if not found\r\n      }\r\n\r\n      const data = await response.json();\r\n      \r\n      // Reset button state\r\n      if (productElement) {\r\n        productElement.innerHTML = '<i class=\"fas fa-shopping-cart\"></i> Add to Cart';\r\n        productElement.disabled = false;\r\n      }\r\n      \r\n      if (response.ok) {\r\n        // Trigger cart update event to refresh cart count in navbar\r\n        window.dispatchEvent(new CustomEvent('authStateChange'));\r\n        \r\n        // Show success message in a non-blocking way\r\n        const successMessage = document.createElement('div');\r\n        successMessage.className = 'alert alert-success position-fixed bottom-0 end-0 m-3';\r\n        successMessage.innerHTML = '<i class=\"fas fa-check-circle me-2\"></i>Added to cart successfully!';\r\n        document.body.appendChild(successMessage);\r\n        \r\n        // Remove the message after 3 seconds\r\n        setTimeout(() => {\r\n          successMessage.remove();\r\n        }, 3000);\r\n      } else {\r\n        // Show error message\r\n        const errorMessage = document.createElement('div');\r\n        errorMessage.className = 'alert alert-danger position-fixed bottom-0 end-0 m-3';\r\n        errorMessage.innerHTML = `<i class=\"fas fa-exclamation-circle me-2\"></i>${data.message || 'Failed to add product to cart'}`;\r\n        document.body.appendChild(errorMessage);\r\n        \r\n        // Remove the message after 3 seconds\r\n        setTimeout(() => {\r\n          errorMessage.remove();\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n      \r\n      // Reset button state if there was an error\r\n      const productElement = document.getElementById(`add-to-cart-${productId}`);\r\n      if (productElement) {\r\n        productElement.innerHTML = '<i class=\"fas fa-shopping-cart\"></i> Add to Cart';\r\n        productElement.disabled = false;\r\n      }\r\n      \r\n      // Show error message\r\n      const errorMessage = document.createElement('div');\r\n      errorMessage.className = 'alert alert-danger position-fixed bottom-0 end-0 m-3';\r\n      errorMessage.innerHTML = '<i class=\"fas fa-exclamation-circle me-2\"></i>Network error. Please check your connection.';\r\n      document.body.appendChild(errorMessage);\r\n      \r\n      // Remove the message after 3 seconds\r\n      setTimeout(() => {\r\n        errorMessage.remove();\r\n      }, 3000);\r\n    }\r\n  };\r\n     return(\r\n        <>\r\n        <section id=\"header\">\r\n        <div className=\"container-fluid nav_bg\">\r\n          <div className=\"row\">\r\n              <div className=\"col-10 mx-auto\">\r\n                <div className=\"row align-items-center\">\r\n\r\n                <div className=\"col-md-6 pt-5 order-2 order-lg-1\">\r\n                 <h1 className=\"hero-heading\">BEYOND YOUR IMAGINATION <br/><strong className=\"brand\">PHONO MANIA</strong></h1> \r\n                 <h4 className=\"hero-subheading\">Find the perfect smartphone at the perfect price</h4>\r\n                 <div className=\"mt-4 d-flex gap-3\">\r\n                     <a href=\"#products\" className=\"hero-btn\">Explore Phones</a>\r\n                     <a href=\"/sell-device\" className=\"hero-btn btn-amazon-secondary\">Sell Your Device</a>\r\n                 </div> \r\n               </div>\r\n\r\n               <div className=\"animated col-lg-6 order-1 order-lg-2 mt-5\">\r\n                  <img src=\"https://img.mobygeek.com/crop/1200x628/2020/10/14/1280x720-dddf.jpg\" className=\"hero-image img-fluid\" alt=\"Smartphone Collection\"/>   \r\n                </div>  \r\n                </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n        </section>\r\n        <br></br>\r\n        <br></br>\r\n        <div className=\"container\">\r\n        <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n          <div className=\"carousel-indicators\">\r\n            <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to={0} className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\" />\r\n            <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to={1} aria-label=\"Slide 2\" />\r\n            <button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to={2} aria-label=\"Slide 3\" />\r\n          </div>\r\n          <div className=\"carousel-inner\">\r\n            <div className=\"carousel-item active\">\r\n              <img src=\"https://browserstack.wpenginepowered.com/wp-content/uploads/2022/10/Testing-on-real-mobile-devices.png\" className=\"d-block w-100\" alt=\"Mobile devices collection\" />\r\n              <div className=\"carousel-caption d-none d-md-block\">\r\n                <h3>Premium Quality Devices</h3>\r\n                <p>Explore our collection of certified used smartphones</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img src=\"http://blog.olx.com.pk/wp-content/uploads/2022/02/Mobile-phones-1.jpg\" className=\"d-block w-100\" alt=\"Latest smartphone models\" />\r\n              <div className=\"carousel-caption d-none d-md-block\">\r\n                <h3>Latest Models Available</h3>\r\n                <p>Get the newest technology at affordable prices</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img src=\"https://cdn.w600.comps.canstockphoto.com/smartphones-and-mobile-applications-clipart_csp13776419.jpg\" className=\"d-block w-100\" alt=\"Smartphone applications\" />\r\n              <div className=\"carousel-caption d-none d-md-block\">\r\n                <h3>Fully Tested & Verified</h3>\r\n                <p>All our devices undergo rigorous quality checks</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"prev\">\r\n            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\" />\r\n            <span className=\"visually-hidden\">Previous</span>\r\n          </button>\r\n          <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide=\"next\">\r\n            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\" />\r\n            <span className=\"visually-hidden\">Next</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      {/* User Listings Section */}\r\n      <section className=\"user-listings-section py-5 bg-light\">\r\n        <div className=\"container\">\r\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n            <h2 className=\"section-title\">Community Listings</h2>\r\n            <a href=\"/user-listings\" className=\"btn btn-amazon\">\r\n              <i className=\"fas fa-list me-2\"></i>View All Listings\r\n            </a>\r\n          </div>\r\n          \r\n          {loadingListings ? (\r\n            <div className=\"text-center mb-4\">\r\n              <i className=\"fas fa-spinner fa-spin me-2\"></i> Loading user listings...\r\n            </div>\r\n          ) : userListings.length > 0 ? (\r\n            <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4\">\r\n              {userListings.map(listing => (\r\n                <div className=\"col\" key={listing._id}>\r\n                  <div className=\"card h-100\">\r\n                    {listing.images && listing.images.length > 0 ? (\r\n                      <img \r\n                        src={listing.images[0].url} \r\n                        className=\"card-img-top\" \r\n                        alt={listing.name}\r\n                        style={{ height: '200px', objectFit: 'contain' }}\r\n                      />\r\n                    ) : (\r\n                      <img \r\n                        src=\"https://via.placeholder.com/300x300?text=No+Image\" \r\n                        className=\"card-img-top\" \r\n                        alt=\"No image available\"\r\n                        style={{ height: '200px', objectFit: 'contain' }}\r\n                      />\r\n                    )}\r\n                    <div className=\"card-body\">\r\n                      <div className=\"d-flex align-items-center mb-1\">\r\n                        <div className=\"text-warning me-1\">\r\n                          {[...Array(5)].map((_, i) => (\r\n                            <i \r\n                              key={i} \r\n                              className={`fas fa-star ${i < Math.floor(listing.ratings || 4) ? '' : 'text-muted'}`}\r\n                            ></i>\r\n                          ))}\r\n                        </div>\r\n                        <small className=\"text-muted\">({listing.numOfReviews || 0})</small>\r\n                      </div>\r\n                      <h5 className=\"card-title\">{listing.name}</h5>\r\n                      <div className=\"price mb-2\">${listing.price?.toFixed(2) || '999.99'}</div>\r\n                      <div className=\"text-success small mb-2\">\r\n                        <i className=\"fas fa-check-circle me-1\"></i> {listing.stock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                      </div>\r\n                      <p className=\"card-text small text-muted\">\r\n                        {listing.description?.substring(0, 60)}{listing.description?.length > 60 ? '...' : ''}\r\n                      </p>\r\n                      <div className=\"d-grid gap-2\">\r\n                        <button \r\n                          id={`add-to-cart-${listing._id}`}\r\n                          className=\"btn btn-amazon\" \r\n                          onClick={() => handleAddToCart(listing._id, 1, listing.price, true)}\r\n                          disabled={listing.stock <= 0}\r\n                        >\r\n                          <i className=\"fas fa-shopping-cart me-1\"></i> Add to Cart\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-4\">\r\n              <p>No community listings available yet.</p>\r\n              <a href=\"/sell-device\" className=\"btn btn-amazon mt-2\">\r\n                <i className=\"fas fa-tag me-2\"></i>Be the first to sell\r\n              </a>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n      \r\n      <br></br>\r\n      <br></br>\r\n      <section id=\"products\" className=\"product-section\">\r\n        <div className=\"container\">\r\n          <h2 className=\"section-title mb-4\">Featured Smartphones</h2>\r\n          {loadingListings && (\r\n            <div className=\"text-center mb-4\">\r\n              <i className=\"fas fa-spinner fa-spin me-2\"></i> Loading user listings...\r\n            </div>\r\n          )}\r\n          <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4\">\r\n            <div className=\"col\">\r\n              <div className=\"card\" data-aos=\"zoom-in\">\r\n                <div className=\"card-badge\">Best Seller</div>\r\n                <img src=\"https://cdn.shopify.com/s/files/1/0568/5942/7015/products/MQ9P3HN_A_1.jpg?v=1662718624\" className=\"card-img-top\" alt=\"iPhone 14 Pro Max\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center mb-1\">\r\n                    <div className=\"text-warning me-1\">\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star-half-alt\"></i>\r\n                    </div>\r\n                    <small className=\"text-muted\">(42)</small>\r\n                  </div>\r\n                  <h5 className=\"card-title\">iPhone 14 Pro Max</h5>\r\n                  <div className=\"price mb-2\">₹1,20,999</div>\r\n                  <div className=\"text-success small mb-2\">\r\n                    <i className=\"fas fa-check-circle me-1\"></i> In Stock\r\n                  </div>\r\n                  <p className=\"card-text small text-muted\">Special Edition Only Available On Phonomania</p>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <button \r\n                      id=\"add-to-cart-iphone14promax\"\r\n                      className=\"btn btn-amazon\" \r\n                      onClick={() => handleAddToCart('iphone14promax', 1)}\r\n                    >\r\n                      <i className=\"fas fa-shopping-cart me-1\"></i> Add to Cart\r\n                    </button>\r\n                    <button className=\"btn btn-amazon-secondary\">\r\n                      <i className=\"fas fa-bolt me-1\"></i> Buy Now\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\" data-aos=\"zoom-in\">\r\n                <div className=\"card-badge\">New</div>\r\n                <img src=\"https://cdn1.smartprix.com/rx-izLSMVlI0-w1200-h1200/zLSMVlI0.jpg\" className=\"card-img-top\" alt=\"Samsung S23 Ultra\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center mb-1\">\r\n                    <div className=\"text-warning me-1\">\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                    </div>\r\n                    <small className=\"text-muted\">(36)</small>\r\n                  </div>\r\n                  <h5 className=\"card-title\">Samsung S23 Ultra</h5>\r\n                  <div className=\"price mb-2\">₹1,27,999</div>\r\n                  <div className=\"text-success small mb-2\">\r\n                    <i className=\"fas fa-check-circle me-1\"></i> In Stock\r\n                  </div>\r\n                  <p className=\"card-text small text-muted\">Special Edition Only Available On Phonomania</p>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <button \r\n                      id=\"add-to-cart-s23ultra\"\r\n                      className=\"btn btn-amazon\" \r\n                      onClick={() => handleAddToCart('s23ultra', 1)}\r\n                    >\r\n                      <i className=\"fas fa-shopping-cart me-1\"></i> Add to Cart\r\n                    </button>\r\n                    <button className=\"btn btn-amazon-secondary\">\r\n                      <i className=\"fas fa-bolt me-1\"></i> Buy Now\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\" data-aos=\"fade-right\">\r\n                <img src=\"https://images-cdn.ubuy.co.in/6340051ae566b8277211a103-huawei-p30-pro-128gb-8gb-ram-vog-l29.jpg\" className=\"card-img-top\" alt=\"Huawei P30 Pro\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center mb-1\">\r\n                    <div className=\"text-warning me-1\">\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"far fa-star\"></i>\r\n                    </div>\r\n                    <small className=\"text-muted\">(28)</small>\r\n                  </div>\r\n                  <h5 className=\"card-title\">Huawei P30 Pro</h5>\r\n                  <div className=\"price mb-2\">₹79,000</div>\r\n                  <div className=\"text-success small mb-2\">\r\n                    <i className=\"fas fa-check-circle me-1\"></i> In Stock\r\n                  </div>\r\n                  <p className=\"card-text small text-muted\">Special Edition Only Available On Phonomania</p>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <button \r\n                      id=\"add-to-cart-p30pro\"\r\n                      className=\"btn btn-amazon\" \r\n                      onClick={() => handleAddToCart('p30pro', 1)}\r\n                    >\r\n                      <i className=\"fas fa-shopping-cart me-1\"></i> Add to Cart\r\n                    </button>\r\n                    <button className=\"btn btn-amazon-secondary\">\r\n                      <i className=\"fas fa-bolt me-1\"></i> Buy Now\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div className=\"card\" data-aos=\"fade-left\">\r\n                <div className=\"card-badge\">Limited</div>\r\n                <img src=\"https://leronza.com/wp-content/uploads/2022/07/A1_24K_Gold_iPhone_14_Pro___Pro_Max_Flora_Edition-min.jpg\" className=\"card-img-top\" alt=\"iPhone 14 Pro Gold Edition\" />\r\n                <div className=\"card-body\">\r\n                  <div className=\"d-flex align-items-center mb-1\">\r\n                    <div className=\"text-warning me-1\">\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                      <i className=\"fas fa-star\"></i>\r\n                    </div>\r\n                    <small className=\"text-muted\">(12)</small>\r\n                  </div>\r\n                  <h5 className=\"card-title\">iPhone 14 Pro Gold Edition</h5>\r\n                  <div className=\"price mb-2\">₹10,15,79,000</div>\r\n                  <div className=\"text-warning small mb-2\">\r\n                    <i className=\"fas fa-exclamation-circle me-1\"></i> Only 2 left in stock\r\n                  </div>\r\n                  <p className=\"card-text small text-muted\">Special Edition Only Available On Phonomania</p>\r\n                  <div className=\"d-grid gap-2\">\r\n                    <button \r\n                      id=\"add-to-cart-iphone14progold\"\r\n                      className=\"btn btn-amazon\" \r\n                      onClick={() => handleAddToCart('iphone14progold', 1)}\r\n                    >\r\n                      <i className=\"fas fa-shopping-cart me-1\"></i> Add to Cart\r\n                    </button>\r\n                    <button className=\"btn btn-amazon-secondary\">\r\n                      <i className=\"fas fa-bolt me-1\"></i> Buy Now\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* Display user listings */}\r\n            {userListings.map(listing => (\r\n              <div className=\"col\" key={listing._id}>\r\n                <div className=\"card\" data-aos=\"zoom-in\">\r\n                  <div className=\"card-badge bg-info\">User Listed</div>\r\n                  {listing.images && listing.images.length > 0 ? (\r\n                    <img src={listing.images[0].url} className=\"card-img-top\" alt={listing.name} />\r\n                  ) : (\r\n                    <img src=\"https://via.placeholder.com/300x300?text=No+Image\" className=\"card-img-top\" alt=\"No image available\" />\r\n                  )}\r\n                  <div className=\"card-body\">\r\n                    <div className=\"d-flex align-items-center mb-1\">\r\n                      <div className=\"text-warning me-1\">\r\n                        <i className=\"fas fa-star\"></i>\r\n                        <i className=\"fas fa-star\"></i>\r\n                        <i className=\"fas fa-star\"></i>\r\n                        <i className=\"fas fa-star\"></i>\r\n                        <i className=\"far fa-star\"></i>\r\n                      </div>\r\n                      <small className=\"text-muted\">(New)</small>\r\n                    </div>\r\n                    <h5 className=\"card-title\">{listing.name}</h5>\r\n                    <div className=\"price mb-2\">₹{listing.price.toLocaleString()}</div>\r\n                    <div className=\"text-success small mb-2\">\r\n                      <i className=\"fas fa-check-circle me-1\"></i> {listing.condition} - {listing.stock} in Stock\r\n                    </div>\r\n                    <p className=\"card-text small text-muted\">\r\n                      {listing.description ? (listing.description.substring(0, 60) + (listing.description.length > 60 ? '...' : '')) : 'No description available'}\r\n                    </p>\r\n                    <div className=\"d-grid gap-2\">\r\n                      <button \r\n                        id={`add-to-cart-${listing._id}`}\r\n                        className=\"btn btn-amazon\" \r\n                        onClick={() => handleAddToCart(listing._id, 1, listing.price, true)}\r\n                      >\r\n                        <i className=\"fas fa-shopping-cart me-1\"></i> Add to Cart\r\n                      </button>\r\n                      <button className=\"btn btn-amazon-secondary\">\r\n                        <i className=\"fas fa-bolt me-1\"></i> Buy Now\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div style={{backgroundColor:\"grey\"}}>\r\n      <footer className=\"footer-section\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-cta pt-5 pb-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-4 col-md-4 mb-30\">\r\n                <div className=\"single-cta\">\r\n                  <i className=\"fas fa-map-marker-alt\" />\r\n                  <div className=\"cta-text\">\r\n                    <h4>Find us</h4>\r\n                    <span>Ambala city, Haryana</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-4 col-md-4 mb-30\">\r\n                <div className=\"single-cta\">\r\n                  <i className=\"fas fa-phone\" />\r\n                  <div className=\"cta-text\">\r\n                    <h4>Call us</h4>\r\n                    <span>9728422008</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-4 col-md-4 mb-30\">\r\n                <div className=\"single-cta\">\r\n                  <i className=\"far fa-envelope-open\" />\r\n                  <div className=\"cta-text\">\r\n                    <h4>Mail us</h4>\r\n                    <span>gagansaini7207@gmail.com</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-content pt-5 pb-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-4 col-lg-4 mb-50\">\r\n                <div className=\"footer-widget\">\r\n                  <div className=\"footer-logo\">\r\n                    <a href=\"index.html\"><img src=\"https://img.freepik.com/premium-vector/pm-logo-design_737672-274.jpg\" className=\"img-fluid\" alt=\"logo\" /></a>\r\n                  </div>\r\n                  <div className=\"footer-text\">\r\n                    <p>We have been in the business for quite a while now, and in that time we have not only managed to make close relationships with numerous partners, but also to recognize what people need. At MobileShop you will find quality products from top brands at consistently low prices. We are offering a wide range of smartphones.</p>\r\n                  </div>\r\n                  <div className=\"footer-social-icon\">\r\n                    <span>Follow us</span>\r\n                    <a href=\"#\"><img src=\"https://img.icons8.com/fluency/2x/facebook-new.png\" className=\"fab fa-facebook-f facebook-bg\" /></a>\r\n                    <a href=\"#\"><img src=\"https://img.icons8.com/color/2x/whatsapp.png\" className=\"fab fa-twitter twitter-bg\" /></a>\r\n                    <a href=\"#\"><img src=\"https://img.icons8.com/fluency/2x/google-logo.png\" className=\"fab fa-google-plus-g google-bg\" /></a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-4 col-lg-4 col-md-6 mb-30\">\r\n                <div className=\"footer-widget\">\r\n                  <div className=\"footer-widget-heading\">\r\n                    <h3>Useful Links</h3>\r\n                  </div>\r\n                  <ul>\r\n                    <li><a href=\"#\">Home</a></li>\r\n                    <li><a href=\"#\">about</a></li>\r\n                    <li><a href=\"#\">services</a></li>\r\n                    <li><a href=\"#\">portfolio</a></li>\r\n                    <li><a href=\"#\">Contact</a></li>\r\n                    <li><a href=\"#\">About us</a></li>\r\n                    <li><a href=\"#\">Our Services</a></li>\r\n                    <li><a href=\"#\">Expert Team</a></li>\r\n                    <li><a href=\"#\">Contact us</a></li>\r\n                    <li><a href=\"#\">Latest News</a></li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-4 col-lg-4 col-md-6 mb-50\">\r\n                <div className=\"footer-widget\">\r\n                  <div className=\"footer-widget-heading\">\r\n                    <h3>Subscribe</h3>\r\n                  </div>\r\n                  <div className=\"footer-text mb-25\">\r\n                    <p>Don’t miss to subscribe to our new feeds, kindly fill the form below.</p>\r\n                  </div>\r\n                  <div className=\"subscribe-form\">\r\n                    <form action=\"#\">\r\n                      <input type=\"text\" placeholder=\"Email Address\" />\r\n                      <button><i className=\"fab fa-telegram-plane\" /></button>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        <div className=\"copyright-area\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-6 col-lg-6 text-center text-lg-left\">\r\n                <div className=\"copyright-text\">\r\n                <p><center>Copyright © 2023, All Right Reserved <a href=\"#\">Rishu</a></center></p>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-6 col-lg-6 d-none d-lg-block text-right\">\r\n                <div className=\"footer-menu\">\r\n                \r\n                   \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n      </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Home;\r\n","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/About.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/Contact.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Cart.js",["117","118"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Cart.css';\n\nconst Cart = () => {\n  const navigate = useNavigate();\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [checkoutLoading, setCheckoutLoading] = useState(false);\n  const [checkoutSuccess, setCheckoutSuccess] = useState(false);\n\n  useEffect(() => {\n    fetchCart();\n  }, []);\n\n  const fetchCart = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      const response = await fetch('https://localhost:8081/api/cart', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch cart');\n      }\n\n      const data = await response.json();\n      setCartItems(data.items || []);\n    } catch (error) {\n      setError('Failed to load cart. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateQuantity = async (productId, change) => {\n    \n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      const item = cartItems.find(item => item.product._id === productId);\n      const newQuantity = Math.max(1, item.quantity + change);\n\n      setLoading(true);\n      const response = await fetch(`https://localhost:8081/api/cart/update/${productId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ quantity: newQuantity })\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to update quantity');\n      }\n\n      const updatedCart = await response.json();\n      setCartItems(updatedCart.items || []);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const removeItem = async (productId) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      setLoading(true);\n      const response = await fetch(`https://localhost:8081/api/cart/remove/${productId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Failed to remove item');\n      }\n\n      const updatedCart = await response.json();\n      setCartItems(updatedCart.items || []);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const calculateSubtotal = () => {\n    return cartItems.reduce((total, item) => total + (item.price * item.quantity), 0);\n  };\n\n  const subtotal = calculateSubtotal();\n  const shipping = subtotal >= 200 ? 0 : 10;\n  const total = subtotal + shipping;\n  const remainingForFreeShipping = Math.max(0, 200 - subtotal);\n\n  if (loading) {\n    return (\n      <div className=\"cart-container\">\n        <div className=\"loading-container\">\n          <i className=\"fas fa-spinner fa-spin loading-spinner\"></i>\n          <h2>Loading your cart...</h2>\n          <p>Please wait while we fetch your items</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"cart-container\">\n        <div className=\"error-container\">\n          <h1 className=\"cart-title\">Error</h1>\n          <p className=\"error-message\">{error}</p>\n          <div className=\"error-actions\">\n            <button className=\"continue-shopping\" onClick={fetchCart}>Try Again</button>\n            <button className=\"dismiss-error\" onClick={clearError}>Dismiss</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const handleCheckout = async () => {\n    try {\n      setCheckoutLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      // Simulate checkout process\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      // In a real application, you would make an API call to create an order\n      // const response = await fetch('https://phonomania-store.onrender.com/api/orders', {\n      //   method: 'POST',\n      //   headers: {\n      //     'Content-Type': 'application/json',\n      //     'Authorization': `Bearer ${token}`\n      //   },\n      //   body: JSON.stringify({\n      //     items: cartItems,\n      //     shippingAddress: user.address,\n      //     paymentMethod: 'credit_card',\n      //     totalAmount: total\n      //   })\n      // });\n      \n      setCheckoutSuccess(true);\n      setCartItems([]);\n      \n      // Redirect to success page after a delay\n      setTimeout(() => {\n        navigate('/checkout-success');\n      }, 2000);\n      \n    } catch (error) {\n      setError('Checkout failed. Please try again.');\n    } finally {\n      setCheckoutLoading(false);\n    }\n  };\n\n  // Function to clear error message\n  const clearError = () => {\n    setError(null);\n  };\n\n  if (checkoutSuccess) {\n    return (\n      <div className=\"cart-container\">\n        <div className=\"checkout-success\">\n          <i className=\"fas fa-check-circle success-icon\"></i>\n          <h2>Order Placed Successfully!</h2>\n          <p>Thank you for your purchase. Redirecting to confirmation page...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart-container\">\n      <h1 className=\"cart-title\">Your Shopping Cart</h1>\n      \n      {cartItems.length > 0 ? (\n        <div className=\"cart-content\">\n          <div className=\"cart-items\">\n            {cartItems.map(item => (\n                <div\n                  key={item.product._id}\n                  className=\"cart-item fade-in\"\n                >\n                  <div className=\"item-image-container\">\n                    <img src={item.product.image} alt={item.product.name} className=\"item-image\" />\n                  </div>\n                  <div className=\"item-details\">\n                    <h3>{item.product.name}</h3>\n                    <p className=\"item-description\">{item.product.description || 'No description available'}</p>\n                    <div className=\"item-price-quantity\">\n                      <p className=\"item-price\">${item.price.toFixed(2)}</p>\n                      <div className=\"quantity-controls\">\n                        <button\n                          onClick={() => updateQuantity(item.product._id, -1)}\n                          className=\"quantity-btn\"\n                          disabled={item.quantity <= 1}\n                        >\n                          <i className=\"fas fa-minus\"></i>\n                        </button>\n                        <span className=\"quantity\">{item.quantity}</span>\n                        <button\n                          onClick={() => updateQuantity(item.product._id, 1)}\n                          className=\"quantity-btn\"\n                        >\n                          <i className=\"fas fa-plus\"></i>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"item-total\">\n                    <p className=\"total-price\">${(item.price * item.quantity).toFixed(2)}</p>\n                    <button\n                      onClick={() => removeItem(item.product._id)}\n                      className=\"remove-btn\"\n                    >\n                      <i className=\"fas fa-trash-alt\"></i> Remove\n                    </button>\n                  </div>\n                </div>\n              ))}\n          </div>\n\n          <div className=\"cart-summary fade-in\">\n            <h2><i className=\"fas fa-shopping-cart\"></i> Order Summary</h2>\n            {remainingForFreeShipping > 0 && (\n              <div className=\"shipping-progress\">\n                <p>\n                  <i className=\"fas fa-truck\"></i>\n                  Add ${remainingForFreeShipping.toFixed(2)} more for free shipping!\n                </p>\n                <div className=\"progress-bar\">\n                  <div\n                    className=\"progress-fill\"\n                    style={{ width: `${(subtotal / 200) * 100}%` }}\n                  ></div>\n                </div>\n              </div>\n            )}\n            <div className=\"summary-details\">\n              <div className=\"summary-row\">\n                <span><i className=\"fas fa-receipt\"></i> Subtotal</span>\n                <span>${subtotal.toFixed(2)}</span>\n              </div>\n              <div className=\"summary-row\">\n                <span><i className=\"fas fa-shipping-fast\"></i> Shipping</span>\n                <span>{shipping === 0 ? 'Free' : `$${shipping.toFixed(2)}`}</span>\n              </div>\n              <div className=\"summary-row total\">\n                <span><i className=\"fas fa-money-bill-wave\"></i> Total</span>\n                <span>${total.toFixed(2)}</span>\n              </div>\n            </div>\n            <button \n              className=\"checkout-btn\" \n              onClick={handleCheckout}\n              disabled={checkoutLoading}\n            >\n              {checkoutLoading ? (\n                <>\n                  <i className=\"fas fa-spinner fa-spin\"></i> Processing...\n                </>\n              ) : (\n                <>\n                  <i className=\"fas fa-lock\"></i> Secure Checkout\n                </>\n              )}\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"empty-cart\">\n          <h2>Your cart is empty</h2>\n          <p>Add some products to your cart to see them here!</p>\n          <button className=\"continue-shopping\" onClick={() => navigate('/products')}>Continue Shopping</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Register.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Profile.js",["119"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    currentPassword: '',\n    newPassword: ''\n  });\n\n  useEffect(() => {\n    fetchUserProfile();\n  }, []);\n\n  const fetchUserProfile = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      const response = await fetch('https://localhost:8081/api/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        setFormData({\n          name: data.user.name,\n          email: data.user.email,\n          currentPassword: '',\n          newPassword: ''\n        });\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError('Failed to fetch profile');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('https://localhost:8081/api/profile', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          name: formData.name,\n          email: formData.email\n        })\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setUser(data.user);\n        setEditMode(false);\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError('Failed to update profile');\n    }\n  };\n\n  const handlePasswordChange = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('https://localhost:8081/api/profile/change-password', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          currentPassword: formData.currentPassword,\n          newPassword: formData.newPassword\n        })\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setFormData({\n          ...formData,\n          currentPassword: '',\n          newPassword: ''\n        });\n        setError('');\n        alert('Password updated successfully');\n        setEditMode(false);\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError('Failed to update password');\n    }\n  };\n\n  if (loading) {\n    return <div className=\"profile-container\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"profile-container error\">{error}</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <img src={user.avatar || 'https://via.placeholder.com/150'} alt=\"Profile\" className=\"profile-avatar\" />\n        <h2>{user.name}</h2>\n        <p className=\"user-stats\">\n          <span><i className=\"fas fa-shopping-cart\"></i> Orders: 12</span>\n          <span><i className=\"fas fa-star\"></i> Reviews: 5</span>\n          <span><i className=\"fas fa-heart\"></i> Wishlist: 8</span>\n        </p>\n      </div>\n\n      <div className=\"profile-content\">\n        <div className=\"activity-timeline\">\n          <h3><i className=\"fas fa-history\"></i> Recent Activity</h3>\n          <div className=\"timeline-item\">\n            <div className=\"timeline-date\">Today</div>\n            <div className=\"timeline-content\">\n              <p><i className=\"fas fa-shopping-cart\"></i> Purchased iPhone 14 Pro</p>\n            </div>\n          </div>\n          <div className=\"timeline-item\">\n            <div className=\"timeline-date\">Yesterday</div>\n            <div className=\"timeline-content\">\n              <p><i className=\"fas fa-star\"></i> Reviewed Samsung Galaxy S23</p>\n            </div>\n          </div>\n          <div className=\"timeline-item\">\n            <div className=\"timeline-date\">3 days ago</div>\n            <div className=\"timeline-content\">\n              <p><i className=\"fas fa-heart\"></i> Added 3 items to wishlist</p>\n            </div>\n          </div>\n        </div>\n\n        {editMode ? (\n          <form onSubmit={handleSubmit} className=\"profile-form\">\n            <div className=\"form-group\">\n              <label>Name:</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Email:</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"button-group\">\n              <button type=\"submit\" className=\"btn-save\">Save Changes</button>\n              <button type=\"button\" className=\"btn-cancel\" onClick={() => setEditMode(false)}>Cancel</button>\n            </div>\n          </form>\n        ) : (\n          <div className=\"profile-info\">\n            <div className=\"info-header\">\n              <h3><i className=\"fas fa-user-circle\"></i> Personal Information</h3>\n            </div>\n            <p><strong>Name:</strong> {user.name}</p>\n            <p><strong>Email:</strong> {user.email}</p>\n            <p><strong>Member Since:</strong> {new Date(user.createdAt || Date.now()).toLocaleDateString()}</p>\n            <button className=\"btn-edit\" onClick={() => setEditMode(true)}>\n              <i className=\"fas fa-edit\"></i> Edit Profile\n            </button>\n          </div>\n        )}\n\n        <div className=\"password-section\">\n          <h3>Change Password</h3>\n          <form onSubmit={handlePasswordChange} className=\"password-form\">\n            <div className=\"form-group\">\n              <label>Current Password:</label>\n              <input\n                type=\"password\"\n                name=\"currentPassword\"\n                value={formData.currentPassword}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>New Password:</label>\n              <input\n                type=\"password\"\n                name=\"newPassword\"\n                value={formData.newPassword}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"btn-change-password\">Change Password</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/Login.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/CheckoutSuccess.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/ImageUploadDemo.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/ImageUploader.js",[],[],["120","121"],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/SellDevice.js",[],[],"/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/UserListings.js",["122"],[],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Cart.css';\n\nconst UserListings = () => {\n  const navigate = useNavigate();\n  const [listings, setListings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchListings();\n  }, []);\n\n  const fetchListings = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      setLoading(true);\n      const response = await fetch('https://localhost:8081/api/listings/my-listings', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch your listings');\n      }\n\n      const data = await response.json();\n      setListings(data);\n    } catch (error) {\n      setError(error.message || 'Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteListing = async (listingId) => {\n    if (!window.confirm('Are you sure you want to delete this listing?')) {\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        navigate('/login');\n        return;\n      }\n\n      const response = await fetch(`https://localhost:8081/api/listings/${listingId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to delete listing');\n      }\n\n      // Remove the deleted listing from state\n      setListings(listings.filter(listing => listing._id !== listingId));\n\n      // Show success message\n      const successMessage = document.createElement('div');\n      successMessage.className = 'alert alert-success position-fixed bottom-0 end-0 m-3';\n      successMessage.innerHTML = '<i class=\"fas fa-check-circle me-2\"></i>Listing deleted successfully!';\n      document.body.appendChild(successMessage);\n      \n      // Remove the message after 3 seconds\n      setTimeout(() => {\n        successMessage.remove();\n      }, 3000);\n\n    } catch (error) {\n      // Show error message\n      const errorMessage = document.createElement('div');\n      errorMessage.className = 'alert alert-danger position-fixed bottom-0 end-0 m-3';\n      errorMessage.innerHTML = `<i class=\"fas fa-exclamation-circle me-2\"></i>${error.message || 'Failed to delete listing'}`;\n      document.body.appendChild(errorMessage);\n      \n      // Remove the message after 3 seconds\n      setTimeout(() => {\n        errorMessage.remove();\n      }, 3000);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container py-5\">\n        <div className=\"loading-container\">\n          <i className=\"fas fa-spinner fa-spin loading-spinner\"></i>\n          <h2>Loading your listings...</h2>\n          <p>Please wait while we fetch your device listings</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container py-5\">\n        <div className=\"error-container\">\n          <h1>Error</h1>\n          <p className=\"error-message\">{error}</p>\n          <button className=\"btn btn-amazon\" onClick={fetchListings}>Try Again</button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container py-5\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\n            <h1>My Device Listings</h1>\n            <button \n              className=\"btn btn-amazon\" \n              onClick={() => navigate('/sell-device')}\n            >\n              <i className=\"fas fa-plus me-2\"></i>Add New Listing\n            </button>\n          </div>\n\n          {listings.length === 0 ? (\n            <div className=\"text-center py-5\">\n              <i className=\"fas fa-box-open fa-3x mb-3 text-muted\"></i>\n              <h3>You don't have any listings yet</h3>\n              <p className=\"text-muted mb-4\">Start selling your devices by creating your first listing</p>\n              <button \n                className=\"btn btn-amazon\" \n                onClick={() => navigate('/sell-device')}\n              >\n                <i className=\"fas fa-tag me-2\"></i>Sell a Device\n              </button>\n            </div>\n          ) : (\n            <div className=\"row\">\n              {listings.map(listing => (\n                <div className=\"col-md-6 col-lg-4 mb-4\" key={listing._id}>\n                  <div className=\"card h-100\">\n                    {listing.images && listing.images.length > 0 && (\n                      <img \n                        src={listing.images[0].url} \n                        className=\"card-img-top\" \n                        alt={listing.name} \n                        style={{ height: '200px', objectFit: 'contain' }}\n                      />\n                    )}\n                    <div className=\"card-body\">\n                      <h5 className=\"card-title\">{listing.name}</h5>\n                      <div className=\"price mb-2\">${listing.price.toFixed(2)}</div>\n                      <div className=\"mb-2\">\n                        <span className=\"badge bg-info me-2\">{listing.condition}</span>\n                        <span className=\"badge bg-secondary\">{listing.category}</span>\n                      </div>\n                      <p className=\"card-text small text-muted\">\n                        {listing.description.substring(0, 100)}{listing.description.length > 100 ? '...' : ''}\n                      </p>\n                      <div className=\"d-flex justify-content-between align-items-center mt-3\">\n                        <small className=\"text-muted\">Stock: {listing.stock}</small>\n                        <div>\n                          <button \n                            className=\"btn btn-sm btn-outline-danger me-2\"\n                            onClick={() => handleDeleteListing(listing._id)}\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                          <button \n                            className=\"btn btn-sm btn-outline-primary\"\n                            onClick={() => navigate(`/edit-listing/${listing._id}`)}\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserListings;","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/SearchResults.js",["123"],[],"import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport '../Home.css';\n\nconst SearchResults = () => {\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  \n  // Get search query from URL parameters\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('q') || '';\n  const category = searchParams.get('category') || 'All';\n\n  useEffect(() => {\n    const fetchSearchResults = async () => {\n      try {\n        setLoading(true);\n        \n        // Build the API URL with search parameters\n        let apiUrl = 'https://localhost:8081/api/products';\n        \n        // If we have a search query, add it to the request\n        if (query) {\n          apiUrl += `?search=${encodeURIComponent(query)}`;\n          \n          // If category is specified and not 'All', add it to the request\n          if (category && category !== 'All') {\n            apiUrl += `&category=${encodeURIComponent(category)}`;\n          }\n        }\n        \n        const response = await fetch(apiUrl);\n        \n        if (!response.ok) {\n          throw new Error('Failed to fetch search results');\n        }\n        \n        const data = await response.json();\n        setProducts(data);\n      } catch (error) {\n        console.error('Error fetching search results:', error);\n        setError('Failed to load search results. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchSearchResults();\n  }, [query, category]);\n\n  const handleAddToCart = async (productId, price) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        window.location.href = '/login';\n        return;\n      }\n\n      // Show loading indicator\n      const productElement = document.getElementById(`add-to-cart-${productId}`);\n      if (productElement) {\n        productElement.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Adding...';\n        productElement.disabled = true;\n      }\n      \n      const response = await fetch('https://localhost:8081/api/cart/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ productId, quantity: 1, price })\n      });\n      \n      // Reset button state\n      if (productElement) {\n        productElement.innerHTML = '<i class=\"fas fa-shopping-cart\"></i> Add to Cart';\n        productElement.disabled = false;\n      }\n      \n      if (response.ok) {\n        // Trigger cart update event to refresh cart count in navbar\n        window.dispatchEvent(new CustomEvent('authStateChange'));\n        \n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'alert alert-success position-fixed bottom-0 end-0 m-3';\n        successMessage.innerHTML = '<i class=\"fas fa-check-circle me-2\"></i>Added to cart successfully!';\n        document.body.appendChild(successMessage);\n        \n        setTimeout(() => {\n          document.body.removeChild(successMessage);\n        }, 3000);\n      }\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  return (\n    <div className=\"container my-4\">\n      <div className=\"search-results-header mb-4\">\n        <h2>Search Results for \"{query}\"</h2>\n        {category !== 'All' && <p>Category: {category}</p>}\n      </div>\n      \n      {loading ? (\n        <div className=\"text-center my-5\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n          <p className=\"mt-2\">Searching for products...</p>\n        </div>\n      ) : error ? (\n        <div className=\"alert alert-danger\">{error}</div>\n      ) : products.length === 0 ? (\n        <div className=\"no-results text-center my-5\">\n          <i className=\"fas fa-search fa-3x mb-3 text-muted\"></i>\n          <h3>No products found</h3>\n          <p>We couldn't find any products matching your search criteria.</p>\n          <Link to=\"/\" className=\"btn btn-primary mt-3\">\n            <i className=\"fas fa-home me-2\"></i>Back to Home\n          </Link>\n        </div>\n      ) : (\n        <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4\">\n          {products.map((product) => (\n            <div className=\"col\" key={product._id}>\n              <div className=\"card h-100 product-card\">\n                <div className=\"card-img-container\">\n                  <img \n                    src={product.images && product.images.length > 0 ? product.images[0] : 'https://via.placeholder.com/300x300?text=No+Image'} \n                    className=\"card-img-top\" \n                    alt={product.name} \n                  />\n                </div>\n                <div className=\"card-body d-flex flex-column\">\n                  <h5 className=\"card-title product-title\">{product.name}</h5>\n                  <div className=\"product-rating mb-2\">\n                    <span className=\"stars\">\n                      {[...Array(5)].map((_, i) => (\n                        <i \n                          key={i} \n                          className={`fas fa-star ${i < Math.floor(product.ratings || 4) ? 'text-warning' : 'text-muted'}`}\n                        ></i>\n                      ))}\n                    </span>\n                    <span className=\"rating-count ms-2 text-muted\">({product.numOfReviews || 0})</span>\n                  </div>\n                  <p className=\"card-text product-price mb-1\">\n                    <span className=\"currency\">$</span>\n                    <span className=\"amount\">{product.price?.toFixed(2) || '999.99'}</span>\n                  </p>\n                  {product.stock > 0 ? (\n                    <p className=\"text-success mb-3\"><i className=\"fas fa-check-circle me-1\"></i> In Stock</p>\n                  ) : (\n                    <p className=\"text-danger mb-3\"><i className=\"fas fa-times-circle me-1\"></i> Out of Stock</p>\n                  )}\n                  <div className=\"mt-auto\">\n                    <button \n                      id={`add-to-cart-${product._id}`}\n                      className=\"btn btn-primary w-100\" \n                      onClick={() => handleAddToCart(product._id, product.price)}\n                      disabled={product.stock <= 0}\n                    >\n                      <i className=\"fas fa-shopping-cart me-2\"></i>\n                      Add to Cart\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResults;","/Users/gagan/Desktop/PhonomaniaStore/someapp/src/components/AllUserListings.js",["124","125"],[],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Home.css';\nimport '../amazon-theme.css';\nimport './AllUserListings.css';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst AllUserListings = () => {\n  const [listings, setListings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(8);\n  const [sortOption, setSortOption] = useState('newest');\n  const [filterCondition, setFilterCondition] = useState('all');\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    fetchAllListings();\n  }, [sortOption, filterCondition]);\n\n  const fetchAllListings = async () => {\n    try {\n      setLoading(true);\n      // Use the dedicated endpoint for user listings\n      const response = await fetch('https://localhost:8081/api/products?category=Used');\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch user listings');\n      }\n      \n      // The API now returns only user listings, no need to filter\n      const data = await response.json();\n      let userListings = data;\n      \n      // Apply condition filter if not 'all'\n      if (filterCondition !== 'all') {\n        userListings = userListings.filter(product => \n          product.condition && product.condition.toLowerCase() === filterCondition.toLowerCase()\n        );\n      }\n      \n      // Apply sorting\n      switch(sortOption) {\n        case 'price-low':\n          userListings.sort((a, b) => (a.price || 0) - (b.price || 0));\n          break;\n        case 'price-high':\n          userListings.sort((a, b) => (b.price || 0) - (a.price || 0));\n          break;\n        case 'rating':\n          userListings.sort((a, b) => (b.ratings || 0) - (a.ratings || 0));\n          break;\n        case 'newest':\n        default:\n          // Assuming newer products have higher IDs or there's a createdAt field\n          userListings.sort((a, b) => new Date(b.createdAt || 0) - new Date(a.createdAt || 0));\n          break;\n      }\n      \n      setListings(userListings);\n\n\n    } catch (error) {\n      console.error('Error fetching listings:', error);\n      setError(error.message || 'Something went wrong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAddToCart = async (productId, price) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        window.location.href = '/login';\n        return;\n      }\n\n      // Show loading indicator\n      const productElement = document.getElementById(`add-to-cart-${productId}`);\n      if (productElement) {\n        productElement.innerHTML = '<i class=\"fas fa-spinner fa-spin\"></i> Adding...';\n        productElement.disabled = true;\n      }\n      \n      const response = await fetch('https://localhost:8081/api/cart/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ productId, quantity: 1, price })\n      });\n      \n      // Reset button state\n      if (productElement) {\n        productElement.innerHTML = '<i class=\"fas fa-shopping-cart\"></i> Add to Cart';\n        productElement.disabled = false;\n      }\n      \n      if (response.ok) {\n        // Trigger cart update event to refresh cart count in navbar\n        window.dispatchEvent(new CustomEvent('authStateChange'));\n        \n        // Show success message\n        const successMessage = document.createElement('div');\n        successMessage.className = 'alert alert-success position-fixed bottom-0 end-0 m-3';\n        successMessage.innerHTML = '<i class=\"fas fa-check-circle me-2\"></i>Added to cart successfully!';\n        document.body.appendChild(successMessage);\n        \n        setTimeout(() => {\n          document.body.removeChild(successMessage);\n        }, 3000);\n      }\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container py-5\">\n        <div className=\"loading-container text-center my-5\">\n          <div className=\"spinner-border text-primary\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n          <p className=\"mt-2\">Loading user listings...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"container py-5\">\n        <div className=\"error-container\">\n          <h1>Error</h1>\n          <p className=\"error-message\">{error}</p>\n          <button className=\"btn btn-amazon\" onClick={fetchAllListings}>Try Again</button>\n        </div>\n      </div>\n    );\n  }\n\n  // Get current listings for pagination\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentListings = listings.slice(indexOfFirstItem, indexOfLastItem);\n  \n  // Change page\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n  \n  // Handle opening the modal with product details\n  const openProductModal = (product) => {\n    setSelectedProduct(product);\n    setShowModal(true);\n  };\n  \n  return (\n    <div className=\"container py-5\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"d-flex justify-content-between align-items-center mb-4\">\n            <div>\n              <h1>User Listings</h1>\n              <p className=\"text-muted\">Browse devices uploaded by our community members</p>\n            </div>\n            <Link to=\"/sell-device\" className=\"btn btn-amazon\">\n              <i className=\"fas fa-tag me-2\"></i>Sell Your Device\n            </Link>\n          </div>\n          \n          {/* Filtering and Sorting Options */}\n          <div className=\"row mb-4\">\n            <div className=\"col-md-6 col-lg-3 mb-3\">\n              <label htmlFor=\"sortOptions\" className=\"form-label\">Sort By</label>\n              <select \n                className=\"form-select\" \n                id=\"sortOptions\"\n                value={sortOption}\n                onChange={(e) => {\n                  setSortOption(e.target.value);\n                  setCurrentPage(1); // Reset to first page when sorting changes\n                }}\n              >\n                <option value=\"newest\">Newest First</option>\n                <option value=\"price-low\">Price: Low to High</option>\n                <option value=\"price-high\">Price: High to Low</option>\n                <option value=\"rating\">Highest Rated</option>\n              </select>\n            </div>\n            <div className=\"col-md-6 col-lg-3 mb-3\">\n              <label htmlFor=\"conditionFilter\" className=\"form-label\">Filter by Condition</label>\n              <select \n                className=\"form-select\" \n                id=\"conditionFilter\"\n                value={filterCondition}\n                onChange={(e) => {\n                  setFilterCondition(e.target.value);\n                  setCurrentPage(1); // Reset to first page when filter changes\n                }}\n              >\n                <option value=\"all\">All Conditions</option>\n                <option value=\"new\">New</option>\n                <option value=\"like new\">Like New</option>\n                <option value=\"good\">Good</option>\n                <option value=\"fair\">Fair</option>\n              </select>\n            </div>\n          </div>\n\n          {listings.length === 0 ? (\n            <div className=\"text-center py-5\">\n              <i className=\"fas fa-box-open fa-3x mb-3 text-muted\"></i>\n              <h3>No user listings available</h3>\n              <p className=\"text-muted mb-4\">There are currently no devices listed by users. Be the first to sell your device!</p>\n              <Link to=\"/sell-device\" className=\"btn btn-amazon\">\n                <i className=\"fas fa-tag me-2\"></i>Sell a Device\n              </Link>\n            </div>\n          ) : (\n            <div className=\"row row-cols-1 row-cols-md-2 row-cols-lg-4 g-4\">\n              {currentListings.map((listing) => (\n                <div className=\"col\" key={listing._id}>\n                  <div className=\"card h-100 product-card\">\n                    <div className=\"card-img-container\" onClick={() => openProductModal(listing)} style={{ cursor: 'pointer' }}>\n                      <img \n                        src={listing.images && listing.images.length > 0 ? listing.images[0].url : 'https://via.placeholder.com/300x300?text=No+Image'} \n                        className=\"card-img-top\" \n                        alt={listing.name} \n                        style={{ height: '200px', objectFit: 'contain' }}\n                      />\n                      {listing.seller?.isPrime && (\n                        <span className=\"badge bg-warning position-absolute top-0 end-0 m-2\">\n                          <i className=\"fas fa-crown me-1\"></i>Prime Seller\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"card-body d-flex flex-column\">\n                      <h5 className=\"card-title product-title\" onClick={() => openProductModal(listing)} style={{ cursor: 'pointer' }}>{listing.name}</h5>\n                      <div className=\"product-rating mb-2\">\n                        <span className=\"stars\">\n                          {[...Array(5)].map((_, i) => (\n                            <i \n                              key={i} \n                              className={`fas fa-star ${i < Math.floor(listing.ratings || 4) ? 'text-warning' : 'text-muted'}`}\n                            ></i>\n                          ))}\n                        </span>\n                        <span className=\"rating-count ms-2 text-muted\">({listing.numOfReviews || 0})</span>\n                      </div>\n                      <p className=\"card-text product-price mb-1\">\n                        <span className=\"currency\">$</span>\n                        <span className=\"amount\">{listing.price?.toFixed(2) || '999.99'}</span>\n                      </p>\n                      <p className=\"card-text small text-muted mb-2\">\n                        {listing.description?.substring(0, 80)}{listing.description?.length > 80 ? '...' : ''}\n                      </p>\n                      <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                        <span className=\"badge bg-info me-2\">{listing.condition || 'New'}</span>\n                        <span className=\"badge bg-secondary\">{listing.category || 'Other'}</span>\n                      </div>\n                      {listing.stock > 0 ? (\n                        <p className=\"text-success mb-2\"><i className=\"fas fa-check-circle me-1\"></i> In Stock</p>\n                      ) : (\n                        <p className=\"text-danger mb-2\"><i className=\"fas fa-times-circle me-1\"></i> Out of Stock</p>\n                      )}\n                      <div className=\"mt-auto\">\n                        <button \n                          id={`add-to-cart-${listing._id}`}\n                          className=\"btn btn-primary w-100\" \n                          onClick={() => handleAddToCart(listing._id, listing.price)}\n                          disabled={listing.stock <= 0}\n                        >\n                          <i className=\"fas fa-shopping-cart me-2\"></i>\n                          Add to Cart\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          {/* Pagination */}\n          {listings.length > 0 && (\n            <nav className=\"mt-4\" aria-label=\"Product pagination\">\n              <ul className=\"pagination justify-content-center\">\n                <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n                  <button className=\"page-link\" onClick={() => paginate(currentPage - 1)}>\n                    <i className=\"fas fa-chevron-left\"></i>\n                  </button>\n                </li>\n                {Array.from({ length: Math.ceil(listings.length / itemsPerPage) }).map((_, index) => (\n                  <li key={index} className={`page-item ${currentPage === index + 1 ? 'active' : ''}`}>\n                    <button className=\"page-link\" onClick={() => paginate(index + 1)}>\n                      {index + 1}\n                    </button>\n                  </li>\n                ))}\n                <li className={`page-item ${currentPage === Math.ceil(listings.length / itemsPerPage) ? 'disabled' : ''}`}>\n                  <button className=\"page-link\" onClick={() => paginate(currentPage + 1)}>\n                    <i className=\"fas fa-chevron-right\"></i>\n                  </button>\n                </li>\n              </ul>\n            </nav>\n          )}\n        </div>\n      </div>\n      \n      {/* Product Detail Modal */}\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\" centered>\n        {selectedProduct && (\n          <>\n            <Modal.Header closeButton>\n              <Modal.Title>{selectedProduct.name}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div className=\"row\">\n                <div className=\"col-md-6 mb-3\">\n                  <div id=\"productImageCarousel\" className=\"carousel slide\" data-bs-ride=\"carousel\">\n                    <div className=\"carousel-inner\">\n                      {selectedProduct.images && selectedProduct.images.length > 0 ? (\n                        selectedProduct.images.map((image, index) => (\n                          <div key={index} className={`carousel-item ${index === 0 ? 'active' : ''}`}>\n                            <img src={image.url} className=\"d-block w-100\" alt={`${selectedProduct.name} - ${index}`} />\n                          </div>\n                        ))\n                      ) : (\n                        <div className=\"carousel-item active\">\n                          <img src=\"https://via.placeholder.com/500x500?text=No+Image\" className=\"d-block w-100\" alt=\"No Image Available\" />\n                        </div>\n                      )}\n                    </div>\n                    {selectedProduct.images && selectedProduct.images.length > 1 && (\n                      <>\n                        <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#productImageCarousel\" data-bs-slide=\"prev\">\n                          <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                          <span className=\"visually-hidden\">Previous</span>\n                        </button>\n                        <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#productImageCarousel\" data-bs-slide=\"next\">\n                          <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                          <span className=\"visually-hidden\">Next</span>\n                        </button>\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"d-flex justify-content-between align-items-start mb-2\">\n                    <h3 className=\"mb-0\">${selectedProduct.price?.toFixed(2) || '999.99'}</h3>\n                    <span className=\"badge bg-info\">{selectedProduct.condition || 'New'}</span>\n                  </div>\n                  \n                  <div className=\"mb-3\">\n                    <div className=\"product-rating\">\n                      <span className=\"stars\">\n                        {[...Array(5)].map((_, i) => (\n                          <i \n                            key={i} \n                            className={`fas fa-star ${i < Math.floor(selectedProduct.ratings || 4) ? 'text-warning' : 'text-muted'}`}\n                          ></i>\n                        ))}\n                      </span>\n                      <span className=\"rating-count ms-2 text-muted\">({selectedProduct.numOfReviews || 0} reviews)</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"mb-3\">\n                    <h5>Description</h5>\n                    <p>{selectedProduct.description || 'No description available.'}</p>\n                  </div>\n                  \n                  <div className=\"mb-3\">\n                    <h5>Specifications</h5>\n                    <ul className=\"list-group list-group-flush\">\n                      {selectedProduct.brand && <li className=\"list-group-item\"><strong>Brand:</strong> {selectedProduct.brand}</li>}\n                      {selectedProduct.category && <li className=\"list-group-item\"><strong>Category:</strong> {selectedProduct.category}</li>}\n                      {selectedProduct.model && <li className=\"list-group-item\"><strong>Model:</strong> {selectedProduct.model}</li>}\n                      {selectedProduct.storage && <li className=\"list-group-item\"><strong>Storage:</strong> {selectedProduct.storage}</li>}\n                      {selectedProduct.color && <li className=\"list-group-item\"><strong>Color:</strong> {selectedProduct.color}</li>}\n                    </ul>\n                  </div>\n                  \n                  <div className=\"d-grid gap-2\">\n                    <Button \n                      variant=\"primary\" \n                      onClick={() => handleAddToCart(selectedProduct._id, selectedProduct.price)}\n                      disabled={selectedProduct.stock <= 0}\n                      className=\"btn-amazon\"\n                    >\n                      <i className=\"fas fa-shopping-cart me-2\"></i>\n                      Add to Cart\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default AllUserListings;",{"ruleId":"126","severity":1,"message":"127","line":36,"column":5,"nodeType":"128","messageId":"129","endLine":40,"endColumn":7},{"ruleId":"126","severity":1,"message":"127","line":42,"column":5,"nodeType":"130","messageId":"129","endLine":45,"endColumn":7},{"ruleId":"131","severity":1,"message":"132","line":173,"column":23,"nodeType":"133","endLine":183,"endColumn":24},{"ruleId":"134","severity":1,"message":"135","line":235,"column":23,"nodeType":"133","endLine":240,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":450,"column":21,"nodeType":"133","endLine":450,"endColumn":134},{"ruleId":"131","severity":1,"message":"132","line":536,"column":21,"nodeType":"133","endLine":536,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":536,"column":33,"nodeType":"133","endLine":536,"endColumn":139},{"ruleId":"131","severity":1,"message":"132","line":537,"column":21,"nodeType":"133","endLine":537,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":537,"column":33,"nodeType":"133","endLine":537,"endColumn":129},{"ruleId":"131","severity":1,"message":"132","line":538,"column":21,"nodeType":"133","endLine":538,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":538,"column":33,"nodeType":"133","endLine":538,"endColumn":139},{"ruleId":"131","severity":1,"message":"132","line":548,"column":25,"nodeType":"133","endLine":548,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":549,"column":25,"nodeType":"133","endLine":549,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":550,"column":25,"nodeType":"133","endLine":550,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":551,"column":25,"nodeType":"133","endLine":551,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":552,"column":25,"nodeType":"133","endLine":552,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":553,"column":25,"nodeType":"133","endLine":553,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":554,"column":25,"nodeType":"133","endLine":554,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":555,"column":25,"nodeType":"133","endLine":555,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":556,"column":25,"nodeType":"133","endLine":556,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":557,"column":25,"nodeType":"133","endLine":557,"endColumn":37},{"ruleId":"131","severity":1,"message":"132","line":585,"column":65,"nodeType":"133","endLine":585,"endColumn":77},{"ruleId":"138","severity":1,"message":"139","line":15,"column":6,"nodeType":"140","endLine":15,"endColumn":8,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":135,"column":56,"nodeType":"144","messageId":"145","endLine":135,"endColumn":66},{"ruleId":"138","severity":1,"message":"146","line":20,"column":6,"nodeType":"140","endLine":20,"endColumn":8,"suggestions":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"138","severity":1,"message":"152","line":13,"column":6,"nodeType":"140","endLine":13,"endColumn":8,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":2,"column":10,"nodeType":"144","messageId":"156","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"157","line":21,"column":6,"nodeType":"140","endLine":21,"endColumn":35,"suggestions":"158"},{"ruleId":"134","severity":1,"message":"135","line":335,"column":27,"nodeType":"133","endLine":335,"endColumn":141},"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","ExpressionStatement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCart'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-use-before-define","'clearError' was used before it was defined.","Identifier","usedBeforeDefined","React Hook useEffect has a missing dependency: 'fetchUserProfile'. Either include it or remove the dependency array.",["160"],"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"React Hook useEffect has a missing dependency: 'fetchListings'. Either include it or remove the dependency array.",["163"],"no-unused-vars","'useParams' is defined but never used.","unusedVar","React Hook useEffect has a missing dependency: 'fetchAllListings'. Either include it or remove the dependency array.",["164"],{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [fetchCart]",{"range":"173","text":"174"},"Update the dependencies array to be: [fetchUserProfile]",{"range":"175","text":"176"},"Update the dependencies array to be: [fetchListings]",{"range":"177","text":"178"},"Update the dependencies array to be: [sortOption, filterCondition, fetchAllListings]",{"range":"179","text":"180"},[492,494],"[fetchCart]",[541,543],"[fetchUserProfile]",[372,374],"[fetchListings]",[780,809],"[sortOption, filterCondition, fetchAllListings]"]